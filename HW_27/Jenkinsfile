pipeline {
    agent { label 'gcp-node' }
    stages {
        stage('Clone') {
            steps {
                sh "rm -rf ./*"
                sh 'git clone git@github.com:tms-dos17-onl/spring-petclinic.git'
                sh 'ls -la'
                sh 'pwd'
            }
        }
        stage('Build') {
            steps {
                sh "spring-petclinic/mvnw package -f spring-petclinic/pom.xml"
                sh 'ls -la'
                sh 'pwd'
                stash includes: 'spring-petclinic/target/*.jar', name: 'jar'
            }
        }
        stage('Integration Tests') {
            agent {
                docker {
                    image 'maven:3.9.3-eclipse-temurin-17'
                    args '-p 8080:8080'
                    reuseNode true
                }
            }
            steps {
                unstash name: 'jar'
                sh 'ls -la'
                sh 'pwd'
                sh 'java -jar spring-petclinic/target/*.jar &'
                sh 'sleep 20'
                sh 'curl 127.0.0.1:8080'
            }
        }
        stage('Publish') {
            steps {
                sh 'ls -la'
                junit 'spring-petclinic/target/surefire-reports/*.xml'
                archiveArtifacts artifacts: "spring-petclinic/target/*.jar"
            }
        }
    }
}